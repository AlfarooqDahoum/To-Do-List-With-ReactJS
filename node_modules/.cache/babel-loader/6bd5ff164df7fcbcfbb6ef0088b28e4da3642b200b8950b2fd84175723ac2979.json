{"ast":null,"code":"import React,{useState}from'react';import'./TodoList.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";const TodoList=()=>{const[tasks,setTasks]=useState([]);const[inputValue,setInputValue]=useState('');const[editIndex,setEditIndex]=useState(-1);const[completedTasks,setCompletedTasks]=useState([]);const addTask=()=>{if(inputValue.trim()!==''){setTasks([...tasks,{text:inputValue,completed:false}]);setInputValue('');}};const editTask=(index,newValue)=>{const updatedTasks=[...tasks];updatedTasks[index].text=newValue;setTasks(updatedTasks);};const deleteTask=index=>{const updatedTasks=tasks.filter((_,i)=>i!==index);setTasks(updatedTasks);setEditIndex(-1);};const toggleComplete=index=>{const updatedTasks=[...tasks];updatedTasks[index].completed=!updatedTasks[index].completed;setTasks(updatedTasks);if(updatedTasks[index].completed){setCompletedTasks([...completedTasks,updatedTasks[index]]);}else{const remainingTasks=completedTasks.filter((_,i)=>i!==index);setCompletedTasks(remainingTasks);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"todo-container\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"To-Do List\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"input-container\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:inputValue,onChange:e=>setInputValue(e.target.value),placeholder:\"Add a task\"}),/*#__PURE__*/_jsx(\"button\",{onClick:addTask,children:\"Add\"})]}),/*#__PURE__*/_jsx(\"ul\",{children:tasks.map((task,index)=>/*#__PURE__*/_jsx(\"li\",{className:task.completed?'completed':'',children:editIndex===index?/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:task.text,onChange:e=>editTask(index,e.target.value),onKeyDown:e=>{if(e.key==='Enter'){setEditIndex(-1);}}}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"span\",{children:task.text}),/*#__PURE__*/_jsxs(\"div\",{className:\"button-container\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>setEditIndex(index),children:\"Edit\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>deleteTask(index),children:\"Delete\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>toggleComplete(index),children:task.completed?'Undo':'Complete'})]})]})},index))}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Completed Tasks\"}),/*#__PURE__*/_jsx(\"ul\",{children:completedTasks.map((task,index)=>/*#__PURE__*/_jsx(\"li\",{children:task.text},index))})]})]});};export default TodoList;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","TodoList","tasks","setTasks","inputValue","setInputValue","editIndex","setEditIndex","completedTasks","setCompletedTasks","addTask","trim","text","completed","editTask","index","newValue","updatedTasks","deleteTask","filter","_","i","toggleComplete","remainingTasks","className","children","type","value","onChange","e","target","placeholder","onClick","map","task","onKeyDown","key"],"sources":["C:/Users/alfar/Desktop/ReactToDo/newreact/src/TodoList.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './TodoList.css'\r\n\r\nconst TodoList = () => {\r\n  const [tasks, setTasks] = useState([])\r\n  const [inputValue, setInputValue] = useState('')\r\n  const [editIndex, setEditIndex] = useState(-1)\r\n  const [completedTasks, setCompletedTasks] = useState([])\r\n\r\n\r\n  const addTask = () => {\r\n    if (inputValue.trim() !== '') {\r\n      setTasks([...tasks, { text: inputValue, completed: false }])\r\n      setInputValue('')\r\n    }\r\n  }\r\n  const editTask = (index, newValue) => {\r\n    const updatedTasks = [...tasks]\r\n    updatedTasks[index].text = newValue\r\n    setTasks(updatedTasks)\r\n  }\r\n  const deleteTask = (index) => {\r\n    const updatedTasks = tasks.filter((_, i) => i !== index)\r\n    setTasks(updatedTasks)\r\n    setEditIndex(-1)\r\n  }\r\n  const toggleComplete = (index) => {\r\n    const updatedTasks = [...tasks]\r\n    updatedTasks[index].completed = !updatedTasks[index].completed\r\n    setTasks(updatedTasks)\r\n\r\n    if (updatedTasks[index].completed) {\r\n      setCompletedTasks([...completedTasks, updatedTasks[index]])\r\n    } else {\r\n      const remainingTasks = completedTasks.filter((_, i) => i !== index)\r\n      setCompletedTasks(remainingTasks);\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n\r\n    <div className=\"todo-container\">\r\n      <h1>To-Do List</h1>\r\n\r\n      <div className=\"input-container\">\r\n        <input\r\n          type=\"text\"\r\n          value={inputValue}\r\n          onChange={(e) => setInputValue(e.target.value)}\r\n          placeholder=\"Add a task\"\r\n        />\r\n        <button onClick={addTask}>Add</button>\r\n      </div>\r\n\r\n      <ul>\r\n        {tasks.map((task, index) => (\r\n          <li key={index} className={task.completed ? 'completed' : ''}>\r\n            {editIndex === index ? (\r\n              <input\r\n                type=\"text\"\r\n                value={task.text}\r\n                onChange={(e) => editTask(index, e.target.value)}\r\n                onKeyDown={(e) => {\r\n                  if (e.key === 'Enter') {\r\n                    setEditIndex(-1);\r\n                  }\r\n                }}\r\n              />\r\n            ) : (\r\n              <>\r\n                <span>{task.text}</span>\r\n                <div className=\"button-container\">\r\n                  <button onClick={() => setEditIndex(index)}>Edit</button>\r\n                  <button onClick={() => deleteTask(index)}>Delete</button>\r\n                  <button onClick={() => toggleComplete(index)}>\r\n                    {task.completed ? 'Undo' : 'Complete'}\r\n                  </button>\r\n                </div>\r\n              </>\r\n            )}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      \r\n      <div>\r\n        <h2>Completed Tasks</h2>\r\n        <ul>\r\n          {completedTasks.map((task, index) => (\r\n            <li key={index}>{task.text}</li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}