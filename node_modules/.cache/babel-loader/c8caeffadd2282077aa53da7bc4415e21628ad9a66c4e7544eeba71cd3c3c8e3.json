{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alfar\\\\Desktop\\\\ReactToDo\\\\newreact\\\\src\\\\TodoList.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './TodoList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TodoList = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [inputValue, setInputValue] = useState('');\n  const [editIndex, setEditIndex] = useState(-1);\n  const [completedTasks, setCompletedTasks] = useState([]);\n  const addTask = () => {\n    if (inputValue.trim() !== '') {\n      setTasks([...tasks, {\n        text: inputValue,\n        completed: false\n      }]);\n      setInputValue('');\n    }\n  };\n  const editTask = (index, newValue) => {\n    const updatedTasks = [...tasks];\n    updatedTasks[index].text = newValue;\n    setTasks(updatedTasks);\n  };\n  const deleteTask = index => {\n    const updatedTasks = tasks.filter((_, i) => i !== index);\n    setTasks(updatedTasks);\n    setEditIndex(-1); // Exit editing mode after deletion\n  };\n\n  const toggleComplete = index => {\n    const updatedTasks = [...tasks];\n    updatedTasks[index].completed = !updatedTasks[index].completed;\n    setTasks(updatedTasks);\n    if (updatedTasks[index].completed) {\n      setCompletedTasks([...completedTasks, updatedTasks[index]]);\n    } else {\n      const remainingTasks = completedTasks.filter((_, i) => i !== index);\n      setCompletedTasks(remainingTasks);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"To-Do List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: inputValue,\n        onChange: e => setInputValue(e.target.value),\n        placeholder: \"Add a task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addTask,\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tasks.map((task, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: task.completed ? 'completed' : '',\n        children: editIndex === index ? /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: task.text,\n          onChange: e => editTask(index, e.target.value),\n          onKeyDown: e => {\n            if (e.key === 'Enter') {\n              setEditIndex(-1);\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: task.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"button-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setEditIndex(index),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => deleteTask(index),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => toggleComplete(index),\n              children: task.completed ? 'Undo' : 'Complete'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Completed Tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: completedTasks.map((task, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: task.text\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(TodoList, \"/7XBcCu2kJebczCsilyGyQQIAxI=\");\n_c = TodoList;\nexport default TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","TodoList","_s","tasks","setTasks","inputValue","setInputValue","editIndex","setEditIndex","completedTasks","setCompletedTasks","addTask","trim","text","completed","editTask","index","newValue","updatedTasks","deleteTask","filter","_","i","toggleComplete","remainingTasks","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","map","task","onKeyDown","key","_c","$RefreshReg$"],"sources":["C:/Users/alfar/Desktop/ReactToDo/newreact/src/TodoList.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './TodoList.css';\r\n\r\nconst TodoList = () => {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [inputValue, setInputValue] = useState('');\r\n  const [editIndex, setEditIndex] = useState(-1);\r\n  const [completedTasks, setCompletedTasks] = useState([]);\r\n\r\n\r\n  const addTask = () => {\r\n    if (inputValue.trim() !== '') {\r\n      setTasks([...tasks, { text: inputValue, completed: false }]);\r\n      setInputValue('');\r\n    }\r\n  };\r\n  const editTask = (index, newValue) => {\r\n    const updatedTasks = [...tasks];\r\n    updatedTasks[index].text = newValue;\r\n    setTasks(updatedTasks);\r\n  };\r\n  const deleteTask = (index) => {\r\n    const updatedTasks = tasks.filter((_, i) => i !== index);\r\n    setTasks(updatedTasks);\r\n    setEditIndex(-1); // Exit editing mode after deletion\r\n  };\r\n  const toggleComplete = (index) => {\r\n    const updatedTasks = [...tasks];\r\n    updatedTasks[index].completed = !updatedTasks[index].completed;\r\n    setTasks(updatedTasks);\r\n\r\n    if (updatedTasks[index].completed) {\r\n      setCompletedTasks([...completedTasks, updatedTasks[index]]);\r\n    } else {\r\n      const remainingTasks = completedTasks.filter((_, i) => i !== index);\r\n      setCompletedTasks(remainingTasks);\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"todo-container\">\r\n      <h1>To-Do List</h1>\r\n      <div className=\"input-container\">\r\n        <input\r\n          type=\"text\"\r\n          value={inputValue}\r\n          onChange={(e) => setInputValue(e.target.value)}\r\n          placeholder=\"Add a task\"\r\n        />\r\n        <button onClick={addTask}>Add</button>\r\n      </div>\r\n      <ul>\r\n        {tasks.map((task, index) => (\r\n          <li key={index} className={task.completed ? 'completed' : ''}>\r\n            {editIndex === index ? (\r\n              <input\r\n                type=\"text\"\r\n                value={task.text}\r\n                onChange={(e) => editTask(index, e.target.value)}\r\n                onKeyDown={(e) => {\r\n                  if (e.key === 'Enter') {\r\n                    setEditIndex(-1);\r\n                  }\r\n                }}\r\n              />\r\n            ) : (\r\n              <>\r\n                <span>{task.text}</span>\r\n                <div className=\"button-container\">\r\n                  <button onClick={() => setEditIndex(index)}>Edit</button>\r\n                  <button onClick={() => deleteTask(index)}>Delete</button>\r\n                  <button onClick={() => toggleComplete(index)}>\r\n                    {task.completed ? 'Undo' : 'Complete'}\r\n                  </button>\r\n                </div>\r\n              </>\r\n            )}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <div>\r\n        <h2>Completed Tasks</h2>\r\n        <ul>\r\n          {completedTasks.map((task, index) => (\r\n            <li key={index}>{task.text}</li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}