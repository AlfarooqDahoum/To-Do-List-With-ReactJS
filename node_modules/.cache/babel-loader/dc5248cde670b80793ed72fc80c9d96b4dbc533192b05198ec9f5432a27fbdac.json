{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alfar\\\\Desktop\\\\ReactToDo\\\\newreact\\\\src\\\\TodoApp.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css'; // Styling file (create your own or use a library)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoApp = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [inputValue, setInputValue] = useState('');\n\n  // Function to handle adding a task\n  const addTask = () => {\n    if (inputValue.trim() !== '') {\n      setTasks([...tasks, {\n        id: Date.now(),\n        text: inputValue,\n        completed: false\n      }]);\n      setInputValue('');\n    }\n  };\n\n  // Function to handle task completion\n  const toggleTask = id => {\n    const updatedTasks = tasks.map(task => task.id === id ? {\n      ...task,\n      completed: !task.completed\n    } : task);\n    setTasks(updatedTasks);\n  };\n\n  // Function to handle task deletion\n  const deleteTask = id => {\n    const filteredTasks = tasks.filter(task => task.id !== id);\n    setTasks(filteredTasks);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo-app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Todo List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Add a task...\",\n        value: inputValue,\n        onChange: e => setInputValue(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addTask,\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"task-list\",\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: task.completed ? 'completed' : '',\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: () => toggleTask(task.id),\n          children: task.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deleteTask(task.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this)]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(TodoApp, \"dZOh9aOqast4wiL+dv9rgcQ5NIU=\");\n_c = TodoApp;\nexport default TodoApp;\nvar _c;\n$RefreshReg$(_c, \"TodoApp\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TodoApp","_s","tasks","setTasks","inputValue","setInputValue","addTask","trim","id","Date","now","text","completed","toggleTask","updatedTasks","map","task","deleteTask","filteredTasks","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/alfar/Desktop/ReactToDo/newreact/src/TodoApp.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './App.css'; // Styling file (create your own or use a library)\r\n\r\nconst TodoApp = () => {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [inputValue, setInputValue] = useState('');\r\n\r\n  // Function to handle adding a task\r\n  const addTask = () => {\r\n    if (inputValue.trim() !== '') {\r\n      setTasks([...tasks, { id: Date.now(), text: inputValue, completed: false }]);\r\n      setInputValue('');\r\n    }\r\n  };\r\n\r\n  // Function to handle task completion\r\n  const toggleTask = (id) => {\r\n    const updatedTasks = tasks.map((task) =>\r\n      task.id === id ? { ...task, completed: !task.completed } : task\r\n    );\r\n    setTasks(updatedTasks);\r\n  };\r\n\r\n  // Function to handle task deletion\r\n  const deleteTask = (id) => {\r\n    const filteredTasks = tasks.filter((task) => task.id !== id);\r\n    setTasks(filteredTasks);\r\n  };\r\n\r\n  return (\r\n    <div className=\"todo-app\">\r\n      <h1>Todo List</h1>\r\n      <div className=\"input-container\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Add a task...\"\r\n          value={inputValue}\r\n          onChange={(e) => setInputValue(e.target.value)}\r\n        />\r\n        <button onClick={addTask}>Add</button>\r\n      </div>\r\n      <ul className=\"task-list\">\r\n        {tasks.map((task) => (\r\n          <li key={task.id} className={task.completed ? 'completed' : ''}>\r\n            <span onClick={() => toggleTask(task.id)}>{task.text}</span>\r\n            <button onClick={() => deleteTask(task.id)}>Delete</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoApp;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}